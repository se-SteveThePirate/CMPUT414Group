<Window x:Class="TeamBest.KinectKapture.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:TeamBest.KinectKapture"
        Title="Kinect Kapture"
        Height="735" Width="770" Loaded="Window_Loaded" 
        >

    <Window.Resources>
        <SolidColorBrush x:Key="MediumGreyBrush" Color="#ff6e6e6e"/>
        <SolidColorBrush x:Key="KinectPurpleBrush" Color="#ff52318f"/>
        <SolidColorBrush x:Key="KinectBlueBrush" Color="#ff00BCF2"/>
        <Style TargetType="{x:Type Image}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>
    </Window.Resources>

    <Grid Name="layoutGrid" Margin="10 0 10 10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock x:Name="txt_Status" Grid.Row="1"  Text="{Binding StatusText}" />
        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <Button x:Name="captureButton" Click="Capture_Button_Click">Start Capture</Button>
            <TextBlock Margin="100, 0, 0, 0">Capture Rate (Captures/Second)</TextBlock>
            <Slider x:Name="rateSlider" Width="281" Maximum="30" Minimum="1" Interval="1" TickFrequency="1" Value="30" Ticks="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30" TickPlacement="Both" IsSnapToTickEnabled="True"></Slider>
            <TextBlock Margin="0, 0, 0, 0" Text="{Binding ElementName=rateSlider, Path=Value}"></TextBlock>
            <TextBlock Margin="25, 0, 0, 0" xml:space="preserve">Frame:</TextBlock>
            <TextBlock x:Name="txt_FPS" Margin="0, 0, 0, 0">0</TextBlock>
        </StackPanel>
        <StackPanel>
        </StackPanel>
        <Grid Grid.Row="3" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Viewport3D  Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="viewport3d" RenderTransformOrigin="0.5,0.5" Margin="0,10,0,-10" >
                <Viewport3D.RenderTransform>
                    <ScaleTransform ScaleX="2.0" ScaleY="2.0"/>
                </Viewport3D.RenderTransform>


                <!-- The ModelVisual3D children contain the 3D models -->
                <!-- Defines the camera used to view the 3D object. -->
                <Viewport3D.Camera>
                    <PerspectiveCamera Position="0.0, 0.0, 0.45" LookDirection="0,0, -1"  UpDirection="0,1,0" FieldOfView="70" />
                </Viewport3D.Camera>
                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <DirectionalLight Color="#FFFFFF" Direction="-0.5,-0.5,-0.5" />
                    </ModelVisual3D.Content>
                </ModelVisual3D>
                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <GeometryModel3D>

                            <!-- Draw a bounding box around the face while it's being captured-->
                            <!-- The geometry specifes the shape of the 3D plane. In this sample, a flat sheet is created. -->
                            <GeometryModel3D.Geometry>
                                <MeshGeometry3D x:Name="theGeometry"
            						TriangleIndices="0,1,2 3,4,5 "
            						Normals="0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1"
            						TextureCoordinates="0,0 1,0 1,1 1,1 0,1 0,0"
            						Positions="-0.25,-0.25,-1 0.25,-0.25,-1 0.25,0.25,-1 0.25,0.25,-1 -0.25,0.25,-1 -0.25,-0.25,-1" />
                            </GeometryModel3D.Geometry>

                            <!-- The material specifies the material applied to the 3D object. In this sample a linear gradient covers the surface of the 3D object.-->
                            <GeometryModel3D.Material>
                                <MaterialGroup>
                                    <DiffuseMaterial x:Name="theMaterial">
                                        <DiffuseMaterial.Brush>
                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                <GradientStop Color="Yellow" Offset="0" />
                                                <GradientStop Color="Red" Offset="0.25" />
                                                <GradientStop Color="Blue" Offset="0.75" />
                                                <GradientStop Color="LimeGreen" Offset="1" />
                                            </LinearGradientBrush>
                                        </DiffuseMaterial.Brush>
                                    </DiffuseMaterial>
                                </MaterialGroup>
                            </GeometryModel3D.Material>

                            <!-- Apply a transform to the object. In this sample, a rotation transform is applied, rendering the 3D object rotated. -->
                            <GeometryModel3D.Transform>
                                <RotateTransform3D>
                                    <RotateTransform3D.Rotation>
                                        <AxisAngleRotation3D Axis="0,3,0" Angle="0" />
                                    </RotateTransform3D.Rotation>
                                </RotateTransform3D>
                            </GeometryModel3D.Transform>
                        </GeometryModel3D>
                    </ModelVisual3D.Content>
                </ModelVisual3D>

            </Viewport3D>

            <Canvas x:Name="testCanvas">
                <Rectangle x:Name="boundingBox2" StrokeThickness="2" Stroke="Red" Grid.Column="2" Panel.ZIndex="99"/>
            </Canvas>

            <ListView x:Name="FacePointCheckList" Grid.Column="0"/>
        </Grid>
    </Grid>
</Window>
